h1. CakePHP Auditable

Este plugin inclui funções para tornar a auditoria de sistemas em CakePHP mais simples.
A ideia central é manter a informação de qual usuário fez o quê, e quando isso foi feito.

h2. Como usar

Existem duas configurações, a primeira é definir, logo que esteja disponível, a informação
sobre o usuário logado e o modelo que salvará a mensagem de log no BD. Para isso, uma sugestão
é usar o callback do AppController, deixando-o mais ou menos assim:

<pre>
public function beforeFilter() {
	parent::beforeFilter();
	
	AuditableConfig::$userId = $this->Auth->user('id');
	
	// Caso deseje usar o modelo padrão, utilize como abaixo, caso contrário você pode usar qualquer modelo
	AuditableConfig::$Logger =& ClassRegistry::init('Auditable.Logger');
}
</pre>

Em seguida você deve configurar em cada um dos modelos auditáveis o behavior Auditable, incluindo
ele em seu $actsAs da seguinte maneira

bc. public $actsAs = array('Auditable.Auditable');

É possível configurar alguns items do behavior, são eles:

* *formats* : Um array com os diferentes formatos utilizados nos logs, conforme abaixo
** *general* : Uma string que será usada como descrição do log. Aceita dois placeholders: ':action' e ':data' que representam respectivamente a ação (criação ou modificação) e o que foi efetivamente alterado.
** *prepend* : Uma string que será prefixada em cada campo do log. Não aceita placeholders.
** *pospend* : Uma string que será pósfixada em cada campo do log. Não aceita placeholders.
** *create* : Uma string que será usado para logs de criação. Aceita os placeholders ':field' e ':value'
** *modify* : Um string que será usada para logs de modificação. Aceita os placeholders ':field', ':old' e ':new'
** *delete* : Uma string que será usada para logs de remoção. Aceita os placeholders ':field' e ':value'
* *skip* : Lista com nome dos campos que devem ser ignoradas no log.
* *fields* : Aceita os dois índices abaixo
** *created* : Nome do campo presente em cada modelo para armazenar quem criou o registro
** *modified* : Nome do campo presente em cada modelo para armazenar quem alterou o registro

h2. Autor e Copyright

* *Copyright 2011-2012,* "*Radig - Soluções em TI*":http://www.radig.com.br
* Licença MIT - Isto quer dizer que o código está disponível sem nenhuma garantia, ao mesmo tempo que
você pode usa-lo de forma isolada ou em conjunto com seu próprio código.

h2. Observações

* Este behavior requer PHP versão >= 5.3
* Compatível com CakePHP 2.0 e 2.1
* Consulte os testes incluído no plugin para ver melhor seu funcionamento